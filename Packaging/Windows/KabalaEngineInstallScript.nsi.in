!include "MUI2.nsh"
!include "FileFunc.nsh"

# name the installer
!define ProjectName "@NSIS_PROJECT_NAME@"
!define SMPROGRAMSFolder $SMPROGRAMS\${ProjectName}
!define OutFileName Install${ProjectName}.exe
!define InstallDirName ${ProjectName}
!define UninstallFileName "Uninstall ${ProjectName}.exe"
!define VERSION "@KABALA_ENGINE_VERSION@"
!define Publisher "Iowa State University"
!define Description "A VR/Game Authoring Engine"
!define HelpLink  "http://www.vrac.iastate.edu/~dkabala"
!define URLUpdateInfo  "http://www.vrac.iastate.edu/~dkabala"
!define URLInfoAbout  "http://www.vrac.iastate.edu/~dkabala"

!define ProjectRootDir "@CMAKE_SOURCE_DIR@"

outFile "${OutFileName}"
;--------------------------------
;General

  ;Name and file
  Name "${ProjectName}"
  OutFile "Install${ProjectName}-${VERSION}.exe"

  ;Default installation folder
  InstallDir "$LOCALAPPDATA\${ProjectName}"
  
  ;Get installation folder from registry if available
  InstallDirRegKey HKCU "Software\${ProjectName}" ""

  ;Request application privileges for Windows Vista
  RequestExecutionLevel user
  
;--------------------------------
;Variables

  Var StartMenuFolder
  
;--------------------------------
;Interface Configuration

  !define MUI_HEADERIMAGE
  ;!define MUI_HEADERIMAGE_BITMAP "${InputDirName}\Release\MetablastLogo.bmp" ; optional
  
  !define MUI_ICON "${ProjectRootDir}\Data\UI\Icons\EngineLogo.ico"
  ;!define MUI_UNICON "${InputDirName}\Release\Meta Icon.ico"
  
  !define MUI_ABORTWARNING
  

;--------------------------------
;Windows 7 taskbar progress
   ;!addplugindir ".\"
   
   ;Function createInstFiles
   ;  w7tbp::Start
   ;FunctionEnd
    
   ;!define MUI_PAGE_CUSTOMFUNCTION_PRE createInstFiles
  ; page instfiles "" createInstFiles
   
;--------------------------------
;Pages

  !insertmacro MUI_PAGE_LICENSE "${ProjectRootDir}\LICENSE.txt"

  ;!insertmacro MUI_PAGE_WELCOME
  !insertmacro MUI_PAGE_COMPONENTS
  !insertmacro MUI_PAGE_DIRECTORY  
  
  ;Start Menu Folder Page Configuration
  !define MUI_STARTMENUPAGE_REGISTRY_ROOT "HKCU" 
  !define MUI_STARTMENUPAGE_REGISTRY_KEY "Software\${ProjectName}" 
  !define MUI_STARTMENUPAGE_REGISTRY_VALUENAME "Start Menu Folder"
  
  !insertmacro MUI_PAGE_STARTMENU Application $StartMenuFolder
  
  !insertmacro MUI_PAGE_INSTFILES
  !insertmacro MUI_PAGE_FINISH

  !insertmacro MUI_UNPAGE_CONFIRM
  !insertmacro MUI_UNPAGE_COMPONENTS
  !insertmacro MUI_UNPAGE_INSTFILES
  
;--------------------------------
;Languages

  !insertmacro MUI_LANGUAGE "English"

;--------------------------------
;Version Information
  VIProductVersion ${VERSION}
  
  VIAddVersionKey /LANG=${LANG_ENGLISH} "ProductName" "${ProjectName}"
  VIAddVersionKey /LANG=${LANG_ENGLISH} "ProductVersion" "${VERSION}"
  VIAddVersionKey /LANG=${LANG_ENGLISH} "CompanyName" "${Publisher}"
  VIAddVersionKey /LANG=${LANG_ENGLISH} "FileVersion" "${VERSION}"
  VIAddVersionKey /LANG=${LANG_ENGLISH} "FileDescription" "${Description}"

;--------------------------------

# default section start; every NSIS script has at least one section.
section
   
   # define the output path for this file
   setOutPath $INSTDIR
   
   #Create the Install Directory
   CreateDirectory $INSTDIR
   
   # define what to install and place it in the output path
   #file test.txt
   
   # define uninstaller name
   writeUninstaller "$INSTDIR\${UninstallFileName}"
   
   ;Add Add/Remove programs options
   WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${ProjectName}" \
                 "DisplayName" "${ProjectName} -- ${Description}"
   WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${ProjectName}" \
                 "UninstallString" "$INSTDIR\${UninstallFileName}$\""
   WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${ProjectName}" \
                 "DisplayVersion" "${VERSION}"
   WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${ProjectName}" \
                 "DisplayIcon" "$INSTDIR\Meta Icon.ico"
   WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${ProjectName}" \
                 "Publisher" "${Publisher}"
   WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${ProjectName}" \
                 "HelpLink" "${HelpLink}"
   WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${ProjectName}" \
                 "URLUpdateInfo" "${URLUpdateInfo}"
   WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${ProjectName}" \
                 "URLInfoAbout " "${URLInfoAbout}"
     
  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
    
    ;Create shortcuts
    CreateDirectory "$SMPROGRAMS\$StartMenuFolder"
    CreateShortCut "$SMPROGRAMS\$StartMenuFolder\World Builder.lnk" "$INSTDIR\KabalaEngine.exe" '-b' "$INSTDIR\share\KabalaEngine\Data\UI\Icons\EngineLogo.ico" "0"
    CreateShortCut "$SMPROGRAMS\$StartMenuFolder\Uninstall.lnk" "$INSTDIR\${UninstallFileName}"
  
  !insertmacro MUI_STARTMENU_WRITE_END

# default section end
sectionEnd

section "Main Application"
   # define the output path for this file
   setOutPath $INSTDIR
   
   #Add lib directory to the path
   
   #Create the Install Directory
   #CreateDirectory $INSTDIR\lib
      
   #setOutPath $INSTDIR\lib
   
   #OpenSG
   File "@OpenSG_BINARIES_DIR@\OSG*.dll"
   
   #Fmod
   File "@FMOD_BINARY@"
   
   #Lua
   File "@LUA_BINARY@"
   
   #Collada
   File "@COLLADA_BINARY@"
   
   #CgFX
   File "@CG_BINARY@"
   File "@CG_GL_BINARY@"
   
   #Support libs
   #jpeg,tiff,png,zlib
   #File "@ZLIB_BINARY@"
   #File "@TIFF_BINARY@"
   #File "@JPEG_BINARY@"
   #File "@PNG_BINARY@"
   
   #Video, VLC
   
   #Boost
   File "@Boost_SYSTEM_LIBRARY_BIN@"
   File "@Boost_FILESYSTEM_LIBRARY_BIN@"
   File "@Boost_PROGRAM_OPTIONS_LIBRARY_BIN@"
   File "@Boost_DATE_TIME_LIBRARY_BIN@"
   
   #ODE
   File "@ODE_BINARY@"
   
   File "@CMAKE_BINARY_DIR@\Release\KabalaEngine.exe"
   
   #Create the Data Directory
   File /r "@CMAKE_INSTALL_PREFIX@\share"
   
   ;Register the size estimate of this install
   ;This needs to be after adding all of the files in the script
   ${GetSize} "$INSTDIR" "/S=0K" $0 $1 $2
   IntFmt $0 "0x%08X" $0
   WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${ProjectName}" "EstimatedSize" "$0"

sectionEnd

section "Documentation"
   # define the output path for this file
   setOutPath $INSTDIR
   
   #Create the Install Directory
   CreateDirectory $INSTDIR\Documentation
sectionEnd


# create a section to define what the uninstaller does.
# the section will always be named "Uninstall"
section "un.${ProjectName}"
    Delete "$INSTDIR\${UninstallFileName}"

    RMDir /r "$INSTDIR"
    
    !insertmacro MUI_STARTMENU_GETFOLDER Application $StartMenuFolder
    
    Delete "$SMPROGRAMS\$StartMenuFolder\Uninstall.lnk"
    Delete "$SMPROGRAMS\$StartMenuFolder\${ProjectName}.lnk"
    RMDir /r "$SMPROGRAMS\$StartMenuFolder"


    DeleteRegKey /ifempty HKCU "Software\${ProjectName}"
    
   ;Remove Add/Remove programs options
    DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${ProjectName}"
 
sectionEnd
